package prs.web;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.dao.EmptyResultDataAccessException;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.GetMapping;
//import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.ResponseBody;

import prs.domain.user.User;
import prs.domain.user.UserRepository;
import prs.domain.vendor.Vendor;


@Controller    // This means that this class is a Controller
@RequestMapping(path="/Users") // This means URL's start with /demo (after Application path)
public class UserController {
	@Autowired // This means to get the bean called userRepository
	           // Which is auto-generated by Spring, we will use it to handle the data
	private UserRepository userRepository;
//
//	@GetMapping(path="/Add") // Map ONLY POST Requests
//	public @ResponseBody Vendor addNewUser (@RequestParam Vendor vendor) {
//		// @ResponseBody means the returned String is the response, not a view name
//		// @RequestParam means it is a parameter from the GET or POST request
//        vendorRepository.save(vendor);
//        System.out.println("Vendor saved:  "+vendor);
//        return vendor;
//	}

	@GetMapping(path="/List")
	public @ResponseBody Iterable<User> getAllUsers() {
		// This returns a JSON or XML with the users
		return userRepository.findAll();
	}
	
    @GetMapping(path="/Get")
    public @ResponseBody User getUser(@RequestParam int id) {
        User u = userRepository.findOne(id);
        return u;//Get?id= enter id # here
    }
    
    @GetMapping(path="/Delete")
    public @ResponseBody String deleteUser(@RequestParam int id) {
        String msg = "";
        try {
            userRepository.delete(id);
            msg = "User " + id + " deleted";
        } catch (EmptyResultDataAccessException exc) {
            msg = "User " + id + " doesn't exist...can't delete!";
        }
        return msg;
    }

}

